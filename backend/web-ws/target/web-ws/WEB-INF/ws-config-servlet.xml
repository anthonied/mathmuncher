<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sws="http://www.springframework.org/schema/web-services"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/web-services
        http://www.springframework.org/schema/web-services/web-services.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <description>
        This web application context contains Spring-WS beans.
    </description>

    <context:annotation-config />

	<context:component-scan base-package="za.co.mathmuncher" />

    <!--
         We have two important URLa:
         WSDL: http://localhost:8080/{projectName}/{root-path}/{bean-name}.wsdl
         Example: http://localhost:8080/mathmuncher/exercise/exercise.wsdl

         Endpoint: http://localhost:8080/{projectName}/{root-path}
         Example: http://localhost:8080/mathmuncher/exercise/ws

         These urls are based on the root path declared in the web.xml and in the SimpleUrlHandlerMapping
     -->

    <!-- Uses the latest feature from 2.0.0 RC2.
          Enables @Endpoint and related Spring-WS annotations. See Spring WS Reference 5.4-->
    <sws:annotation-driven/>

    <!-- Uses the latest feature from 2.0.0 RC2.
          Enables interceptor endpoints. See Spring WS Reference 5.5.2
          Here we have an interceptor that validates XML request and a logger
         -->
    <sws:interceptors>
        <bean id="validatingInterceptor"
              class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor">
            <property name="schema" value="/WEB-INF/exercise.xsd"/>
            <property name="validateRequest" value="true"/>
            <property name="validateResponse" value="true"/>
        </bean>
        <bean id="loggingInterceptor" class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor"/>
    </sws:interceptors>

    <sws:dynamic-wsdl id="exercise"
                      portTypeName="ExercisePort"
                      locationUri="/ws/exercise"
                      targetNamespace="http://mathmuncher.co.za/ws/schemas/ex">
        <sws:xsd location="/WEB-INF/exercise.xsd"/>
    </sws:dynamic-wsdl>

    <bean id="defaultMethodEndpointAdapter" class="org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapter">
        <property name="methodArgumentResolvers">
            <list>
                <ref bean="marshallingPayloadMethodProcessor"/>
            </list>
        </property>
        <property name="methodReturnValueHandlers">
            <list>
                <ref bean="marshallingPayloadMethodProcessor"/>
            </list>
        </property>
    </bean>

    <!--Pluggable marshallers / unmarshallers-->
    <bean id="marshallingPayloadMethodProcessor"
          class="org.springframework.ws.server.endpoint.adapter.method.MarshallingPayloadMethodProcessor">
        <constructor-arg ref="jaxbMarshaller"/>
        <constructor-arg ref="jaxbMarshaller"/>
    </bean>

    <!-- uses JAXB annotations to marshall between XML messages and Java objects -->
    <bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound">
            <list>
                <value>za.co.mathmuncher.domain.AnthropodExerciseResponse</value>
                <value>za.co.mathmuncher.domain.AnthropodExerciseRequest</value>
                <!--<value>za.co.mathmuncher.domain.AnthropodExerciseResult</value>-->
            </list>
        </property>
    </bean>

</beans>


            <!--&lt;!&ndash;  Our mashaller. You can use any marshaller you want.-->
    <!--For info on how to use Castor, see http://www.castor.org/xml-mapping.html#2.1-Marshalling-Behavior &ndash;&gt;-->
    <!--<bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller"-->
    <!--p:mappingLocation="/WEB-INF/castor-mapping.xml" />-->